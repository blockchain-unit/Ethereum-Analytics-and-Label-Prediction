# -*- coding: utf-8 -*-
"""Label Crawler1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1Eiqapb8BzIT5VxD2csEMNy_MhWwo5zuU
"""

# import libraries
from time import time
import csv
from urllib.request import Request, urlopen
from bs4 import BeautifulSoup
import pyrebase
import os
import glob

start_time = time()

#####Firebase API config

config = {
  "apiKey": " AIzaSyBBeRlnhtUvp-NOyfFeGgnciVWelzIfslE",
  "authDomain": "ethertest.firebaseapp.com",
  "databaseURL": "https://ether-370d8.firebaseio.com/",
  "storageBucket": "ethertest.appspot.com"
}

#referencing to pyrebase
firebase = pyrebase.initialize_app(config)
db = firebase.database()
auth = firebase.auth()
db = firebase.database()

#############################################################################

populatedAddress=[]
writepopulatedAddressDict= {}

path = 'D:/University/MS/Thesis/Current/W11/Test/'
extension = 'csv'
os.chdir(path)
result = glob.glob('*.{}'.format(extension))

for filename in result:
	path = os.path.join('D:/University/MS/Thesis/Current/W11/Test/', filename)
	with open(path, 'r') as csvFile:
	    reader = csv.reader(csvFile)
	    for row in reader:
	        populatedAddress.append(row)
	csvFile.close()

	populatedAddress.pop(0)
	l = len(populatedAddress)


	readleft = l-1
	writeleft= l-1
	for i in range (l-1):
	  print(filename, i," ===========> reading done")
	  #check if the address already exists in the database
	  if( db.child(populatedAddress[i][0]).get().val() !=None):
	    continue
	  
	  quote_page = 'https://etherscan.io/address/'+populatedAddress[i][0]

	  # query the website and return the html to the variable ‘page’
	  req = Request(quote_page, headers={'User-Agent': 'Mozilla/5.0'})
	  page = urlopen(req).read()

	  # parse the html using beautiful soup and store in variable `soup`
	  soup = BeautifulSoup(page, 'lxml')
	  con=soup.find('div','container py-3')  
	  div=con.find('div','mt-1')
	  tags=div.findAll('a')
	  ttxt=[tag.text for tag in tags]
	  
	  #assigning unknown to any label that does not exist
	  if not ttxt:
	    ttxt= ["unknown"]
	  else:
	    #gets the last tag always instead of both two
	    ttxt=[ttxt[-1]]
	  #print (ttxt)

	  #saving addresses with labels into Firebase db
	  data = {"label": ttxt}
	  db.child(populatedAddress[i][0]).set(data)

	  #write address to dictionary
	  writepopulatedAddressDict[populatedAddress[i][0]] = ttxt


	####Writing tags back to the original file against the addresses
	with open('D:/University/MS/Thesis/Current/W11/Test/labeled/'+'labeled_'+filename, 'a', newline='') as newFile:
	  for i in range(0,l):
	      print(filename, i," ===========> writing done")
	      newFileWriter = csv.writer(newFile)
	      if(populatedAddress[i][0] in writepopulatedAddressDict): 
	       g=newFileWriter.writerow(populatedAddress[i]+writepopulatedAddressDict[populatedAddress[i][0]])

	      else:
	       continue

	newFile.close()       

	with open('D:/University/MS/Thesis/Current/W11/Test/log.txt', 'a', encoding='utf-8') as file:
		file.write(filename+" READ AND WRITTEN!\n")
    
    #file.close()

	#########Timing the total process time
	endtime= time()
	consumed = endtime-start_time
	print("time consumed ",consumed)
	
	##############
	populatedAddress=[]
	writepopulatedAddressDict.clear()
